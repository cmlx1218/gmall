# 输出到控制台
# cmlx.MyConsole 是自己写的名字
log4j.appender.cmlx.MyConsole=org.apache.log4j.ConsoleAppender
# System.out和System.err 区别是后者是红色
log4j.appender.cmlx.MyConsole.target=System.out
# 布局
log4j.appender.cmlx.MyConsole.layout=org.apache.log4j.PatternLayout
# 自定义输出格式 %d{yyyy-MM-dd HH:mm:ss} ->时间   %10p ->输出是个空格,输出级别  (%c:%M) ->输出的类和方法  %m ->具体的日志内容  %n ->换行
log4j.appender.cmlx.MyConsole.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %10p (%c:%M) - %m%n

# 输出到每日滚动的文件
log4j.appender.cmlx.File=org.apache.log4j.DailyRollingFileAppender
# 生成日志的地址
log4j.appender.cmlx.File.file=/log/bigdata/gmall/log/app.log
# 每天的新日志放在app.log 旧日志命名为app.log.yyyy-MM-dd
log4j.appender.cmlx.File.DatePattern='.'yyyy-MM-dd
# 布局
log4j.appender.cmlx.File.layout=org.apache.log4j.PatternLayout
# 日志输出格式,这里为了方便我们分析日志,就只打印日志内容和换行
log4j.appender.cmlx.File.layout.ConversionPattern=%m%n

# 打印日志的类、日志级别和日志位置
log4j.logger.com.cmlx.gmall.logger.controller.LoggerController=info,cmlx.File,cmlx.MyConsole

# 打印的日志级别是输出当前级别和比当前级别高的日志
# trace debug info warn error  fatal